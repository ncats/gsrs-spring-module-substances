{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://gsrs.ncats.nih.gov/#/export.scrubber.schema.json",
  "title": "Scrubber Parameters",
  "description": "Factors that control the behavior of a Java class that removes non-public parts of a data object before the object is shared",
  "type": "object",
  "properties": {
    "removeDates": {
      "comments": "When selected, remove all date fields from output",
      "type": "boolean",
      "title": "Remove dates"
    },
    "removeAllLocked": {
      "comments": "When selected, remove any data element that is marked as non-public",
      "title": "Remove all locked",
      "type": "boolean"
    },
    "removeAllLockedAccessGroupsToInclude": {
      "comments": "Names of access groups that will NOT be removed ",
      "type": "array",
      "items": {
        "type": "string"
      },
      "title": "Access groups to include",
      "visibleIf": {
        "removeAllLocked": [
          true
        ]
      },
      "widget": {
        "id": "multi-select"
      },
      "CVDomain": "ACCESS_GROUP"
    },
    "removeAllLockedRemoveElementsIfNoExportablePublicRef": {
      "comments": "Elements to remove when they have no public references",
      "type": "boolean",
      "title": "Remove elements if no exportable selected public domain reference",
      "visibleIf": {
        "removeAllLocked": [
          true
        ]
      }
    },
    "removeElementsIfNoExportablePublicRefElementsToRemove": {
      "comments": "Elements to remove when the substance has no public references",
      "type": "array",
      "items": {
        "type":"string",
        "enum": [
          "Names",
          "Codes",
          "Definition",
          "Notes",
          "Relationships",
          "Properties",
          "Modifications"
        ]
      },
      "title": "Elements to remove",
      "visibleIf": {
        "removeAllLockedRemoveElementsIfNoExportablePublicRef": [
          true
        ]
      },
      "widget": {
        "id": "multi-select"
      }
    },
    "removeCodesBySystem": {
      "comments": "When selected, remove any codes whose code system is on the list",
      "title": "Remove codes by system",
      "type": "boolean"
    },
    "removeCodesBySystemCodeSystemsToRemove": {
      "comments": "Code Systems to remove",
      "type": "array",
      "items": {
        "type": "string"
      },
      "title": "Code systems to remove",
      "visibleIf": {
        "removeCodesBySystem": [
          true
        ]
      },
      "widget": {
        "id": "multi-select"
      },
      "CVDomain": "CODE_SYSTEM"
    },
    "removeCodesBySystemCodeSystemsToKeep": {
      "comments": "Code systems to keep",
      "type": "array",
      "items": {
        "type": "string"
      },
      "title": "Code systems to keep",
      "visibleIf": {
        "removeCodesBySystem": [
          true
        ]
      },
      "widget": {
        "id": "multi-select"
      },
      "CVDomain": "CODE_SYSTEM"
    },
    "removeReferencesByCriteria": {
      "comments": "When selected, remove any references that meet specified criteria",
      "title": "Remove references by criteria",
      "type": "boolean"
    },
    "removeReferencesByCriteriaReferenceTypesToRemove": {
      "comments": "Document types to look at. When a reference is of that document type, remove it",
      "type": "array",
      "items": {
        "type": "string"
      },
      "title": "Reference types to remove",
      "visibleIf": {
        "removeReferencesByCriteria": [
          true
        ]
      },
      "widget": {
        "id": "multi-select"
      },
      "CVDomain": "DOCUMENT_TYPE"
    },
    "removeReferencesByCriteriaCitationPatternsToRemove": {
      "comments": "Patterns (RegExes) to apply to reference citation.  When a citation matches, remove the reference",
      "type": "string",
      "title": "Citation patterns to remove",
      "visibleIf": {
        "removeReferencesByCriteria": [
          true
        ]
      },
      "widget": {
        "id": "textarea"
      }
    },
    "removeReferencesByCriteriaExcludeReferenceByPattern": {
      "comments": "Remove references by looking at citationPatternsToRemove",
      "title": "Exclude reference by pattern",
      "type": "boolean",
      "visibleIf": {
        "removeReferencesByCriteria": [
          true
        ]
      }
    },
    "substanceReferenceCleanup": {
      "comments": "When selected, next criteria are used to process substance references",
      "type": "boolean",
      "title": "Substance reference cleanup"
    },
    "substanceReferenceCleanupActionForDefinitionalDependentScrubbedSubstanceReferences": {
      "comments": "Define what happens when a referenced substance that's part of a definition would be filtered out by the scrubber.",
      "type": "string",
      "title": "What action should be taken when a definition depends on a referenced substance which would be scrubbed out?",
      "enum":[
	"KEEP_REFERENCE",
	"REMOVE_PARENT_SUBSTANCE_ENTIRELY",
	"DEIDENTIFY_SUBSTANCE_REFERENCE",
	"REMOVE_ONLY_SUBSTANCE_REFERENCE",
	"REMOVE_SUBSTANCE_REFERENCE_AND_PARENT_IF_NECESSARY",
	"REMOVE_DEFINITION_ENTIRELY"
      ],
      "visibleIf": {
        "substanceReferenceCleanup": [
          true
        ]
      },
      "widget":{
      	"id":"select"
      }
    },
    "substanceReferenceCleanupActionForRelationalScrubbedSubstanceReferences": {
      "comments": "Define what happens when a referenced substance that's NOT part of a definition (e.g. relationship) would be filtered out by the scrubber.",
      "type": "string",
      "title": "What action should be taken when a record references a scrubbed-out substance in a non-defining way (e.g. relationships)?",
      "enum":[
	"KEEP_REFERENCE",
	"REMOVE_PARENT_SUBSTANCE_ENTIRELY",
	"DEIDENTIFY_SUBSTANCE_REFERENCE",
	"REMOVE_ONLY_SUBSTANCE_REFERENCE",
	"REMOVE_SUBSTANCE_REFERENCE_AND_PARENT_IF_NECESSARY",
	"REMOVE_DEFINITION_ENTIRELY"
      ],
      "visibleIf": {
        "substanceReferenceCleanup": [
          true
        ]
      },
      "widget":{
      	"id":"select"
      }
    },
    "removeNotes": {
      "comments": "When selected, remove all notes",
      "type": "boolean",
      "title": "Remove notes"
    },
    "removeChangeReason": {
      "comments": "When selected, delete the 'Change Reason' field",
      "type": "boolean",
      "title": "Remove change reason"
    },
    "approvalIdCleanup": {
      "comments": "Apply additional criteria to the approval ID field",
      "type": "boolean",
      "title": "Approval ID clean-up"
    },
    "approvalIdCleanupRemoveApprovalId": {
      "comments": "The record's approval ID (system-generated identifier created when the substance is verified by a second registrar) is removed",
      "type": "boolean",
      "title": "Remove approval ID",
      "visibleIf": {
        "approvalIdCleanup": [
          true
        ]
      }
    },
    "approvalIdCleanupCopyApprovalIdToCode": {
      "comments": "The record's approval ID (system-generated identifier created when the substance is verified by a second registrar) is copied to a code",
      "type": "boolean",
      "title": "Copy approval ID to code if code not already present",
      "visibleIf": {
        "approvalIdCleanup": [
          true
        ]
      }
    },
    "approvalIdCleanupApprovalIdCodeSystem": {
      "comments": "When this parameter has a value, the record's approval ID (system-generated identifier created when the substance is verified by a second registrar) is copied to a code of this specified system",
      "type": "string",
      "title": "Copy approval ID to code with following code system (if not already present)",
      "visibleIf": {
        "approvalIdCleanup": [
          true
        ]
      }
    },
    "UUIDCleanup": {
      "comments": "Apply additional criteria to the top-level UUID field",
      "type": "boolean",
      "title": "Clean up (top-level) UUIDs"
    },
    "regenerateUUIDs": {
      "comments": "All UUIDs in the object being exported will be given a newly-generated value",
      "type": "boolean",
      "title": "Regenerate UUIDs",
      "visibleIf": {
        "UUIDCleanup": [
          true
        ]
      }
    },
    "UUIdCleanupCopyUUIDIdToCode": {
      "comments": "The record's UUID (system-generated identifier) is copied to a code",
      "type": "boolean",
      "title": "Copy UUID to code if code not already present",
      "visibleIf": {
        "UUIDCleanup": [
          true
        ]
      }
    },
    "UUIDCleanupUUIDCodeSystem": {
      "comments": "When this parameter has a value, the record's top-level UUID (system-generated identifier) is copied to a code of this specified system",
      "type": "string",
      "title": "Copy UUID to code with following code system (if not already present)",
      "visibleIf": {
        "UUIDCleanup": [
          true
        ]
      }
    },
    "changeAllStatuses": {
      "comments": "All status value in the object being exported will be given a value",
      "type": "boolean",
      "title": "Change all statuses"
    },
    "changeAllStatusesNewStatusValue": {
      "comments": "New string value to assign to all individual status fields throughout the object",
      "type": "string",
      "title": "New status value",
      "visibleIf": {
        "changeAllStatuses": [
          true
        ]
      }
    },
    "auditInformationCleanup": {
      "comments": "Apply succeeding criteria to audit fields",
      "type": "boolean",
      "title": "Audit information clean-up"
    },
    "auditInformationCleanupDeidentifyAuditUser": {
      "comments": "Remove users listed as creator or modifier of records and subrecords",
      "type": "boolean",
      "title": "Deidentify audit user",
      "visibleIf": {
        "auditInformationCleanup": [
          true
        ]
      }
    },
    "auditInformationCleanupNewAuditorValue": {
      "comments": "New string value to assign to all auditor (creator/modifier) fields throughout the object",
      "title": "New auditor value",
      "type": "string",
      "visibleIf": {
        "auditInformationCleanup": [
          true
        ]
      }
    },
    "removeBasedOnStatus": {
      "comments": "Remove records if they have a certain status value",
      "title": "Remove records based on status",
      "type": "boolean"
    },
    "statusesToInclude": {
      "comments": "Records with any of the following record status attributes will be kept",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "approved",
          "alternative",
          "approved subconcept",
          "pending subconcept",
          "pending",
          "failed",
          "concept"
        ]
      },
      "title": "Statuses to include",
      "visibleIf": {
        "removeBasedOnStatus": [
          true
        ]
      },
      "widget": {
        "id": "multi-select"
      }
    },
    "scrubbedDefinitionHandling": {
      "comments": "Apply some additional scrubbing to definitions that had parts removed",
      "title": "Scrubbed definition handling",
      "type": "boolean"
    },
    "scrubbedDefinitionHandlingRemoveScrubbedDefinitionalElementsEntirely": {
      "comments": "When a defining element has been modified, remove it entirely",
      "title": "Remove partially/fully scrubbed definitional records entirely",
      "type": "boolean",
      "visibleIf": {
        "scrubbedDefinitionHandling": [
          true
        ]
      }
    },
    "scrubbedDefinitionHandlingSetScrubbedDefinitionalElementsIncomplete": {
      "comments": "When a defining element has been modified, set definitional level to \"Incomplete\"",
      "title": "Set partially/fully scrubbed definitional records to definitional level \"Incomplete\"",
      "type": "boolean",
      "visibleIf": {
        "scrubbedDefinitionHandling": [
          true
        ]
      }
    },
    "scrubbedDefinitionHandlingConvertScrubbedDefinitionsToConcepts": {
      "comments": "When a substance's defining element has been modified, convert the substance type to \"Concept\"",
      "title": "Convert partially/fully scrubbed definitional records to \"Concepts\"",
      "type": "boolean",
      "visibleIf": {
        "scrubbedDefinitionHandling": [
          true
        ]
      }
    },
    "scrubbedDefinitionHandlingAddNoteToScrubbedDefinitions": {
      "comments": "When a substance's defining element has been modified, add a Note",
      "title": "add a note to partially/fully scrubbed definitional records",
      "type": "string",
      "visibleIf": {
        "scrubbedDefinitionHandling": [
          true
        ]
      }
    },
    
    "scrubbedDefinitionHandlingTreatPartialDefinitionsAsMissingDefinitions": {
      "comments": "Treat partially scrubbed definitions with the same settings as fully scrubbed definitions",
      "title": "Treat partially scrubbed definitions with same settings",
      "type": "boolean",
      "visibleIf": {
        "scrubbedDefinitionHandling": [
          true
        ]
      }
    },
    "scrubbedDefinitionHandlingRemoveScrubbedPartialDefinitionalElementsEntirely": {
      "comments": "When a defining element has been partially scrubbed, remove it entirely",
      "title": "Remove PARTIALLY scrubbed definitional records entirely",
      "type": "boolean",
      "visibleIf": {
        "scrubbedDefinitionHandling": [
          true
        ],
        "scrubbedDefinitionHandlingTreatPartialDefinitionsAsMissingDefinitions": [
          false
        ]
      }
    },
    "scrubbedDefinitionHandlingSetScrubbedPartialDefinitionalElementsIncomplete": {
      "comments": "When a defining element has been partially scrubbed, set definitional level to \"Incomplete\"",
      "title": "Set PARTIALLY scrubbed definitional records to definitional level \"Incomplete\"",
      "type": "boolean",
      "visibleIf": {
        "scrubbedDefinitionHandling": [
          true
        ],
        "scrubbedDefinitionHandlingTreatPartialDefinitionsAsMissingDefinitions": [
          false
        ]
      }
    },
    "scrubbedDefinitionHandlingConvertScrubbedPartialDefinitionsToConcepts": {
      "comments": "When a substance's defining element has been partially scrubbed, convert the substance type to \"Concept\"",
      "title": "Convert PARTIALLY scrubbed definitional records to \"Concepts\"",
      "type": "boolean",
      "visibleIf": {
        "scrubbedDefinitionHandling": [
          true
        ],
        "scrubbedDefinitionHandlingTreatPartialDefinitionsAsMissingDefinitions": [
          false
        ]
      }
    },
    "scrubbedDefinitionHandlingAddNoteToScrubbedPartialDefinitions": {
      "comments": "When a substance's defining element has been partially scrubbed, add a Note",
      "title": "add a note to PARTIALLY scrubbed definitional records",
      "type": "string",
      "visibleIf": {
        "scrubbedDefinitionHandling": [
          true
        ],
        "scrubbedDefinitionHandlingTreatPartialDefinitionsAsMissingDefinitions": [
          false
        ]
      }
    }
  },
  "required": [],
  "constraints": [
    {
      "if": "removeCodesBySystem",
      "then": {
        "oneOf": [
          [
            "removeCodesBySystemCodeSystemsToRemove",
            "removeCodesBySystemCodeSystemsToKeep"
          ]
        ]
      }
    }
  ]
}
